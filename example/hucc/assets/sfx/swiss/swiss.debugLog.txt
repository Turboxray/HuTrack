Opening [examples/swiss.vgm] ....
[369]
 DEBUG: op 0x90, operand ['0x0', '0x1b', '0x0', '0x6'], offset 0x105, current chan 0
     90 NO STORE
 DEBUG: op 0x91, operand ['0x0', '0x5', '0x1', '0x0'], offset 0x10a, current chan 0
     91 NO STORE
 DEBUG: op 0x92, operand ['0x0', '0x80', '0x3e', '0x0', '0x0'], offset 0x110, current chan 0
     91 NO STORE
 DEBUG: op 0x90, operand ['0x1', '0x1b', '0x1', '0x6'], offset 0x115, current chan 0
     90 NO STORE
 DEBUG: op 0x91, operand ['0x1', '0x5', '0x1', '0x0'], offset 0x11a, current chan 0
     91 NO STORE
 DEBUG: op 0x92, operand ['0x1', '0x80', '0x3e', '0x0', '0x0'], offset 0x120, current chan 0
     91 NO STORE
 DEBUG: op 0x90, operand ['0x2', '0x1b', '0x2', '0x6'], offset 0x125, current chan 0
     90 NO STORE
 DEBUG: op 0x91, operand ['0x2', '0x5', '0x1', '0x0'], offset 0x12a, current chan 0
     91 NO STORE
 DEBUG: op 0x92, operand ['0x2', '0x80', '0x3e', '0x0', '0x0'], offset 0x130, current chan 0
     91 NO STORE
 DEBUG: op 0x90, operand ['0x3', '0x1b', '0x3', '0x6'], offset 0x135, current chan 0
     90 NO STORE
 DEBUG: op 0x91, operand ['0x3', '0x5', '0x1', '0x0'], offset 0x13a, current chan 0
     91 NO STORE
 DEBUG: op 0x92, operand ['0x3', '0x80', '0x3e', '0x0', '0x0'], offset 0x140, current chan 0
     91 NO STORE
 DEBUG: op 0x90, operand ['0x4', '0x1b', '0x4', '0x6'], offset 0x145, current chan 0
     90 NO STORE
 DEBUG: op 0x91, operand ['0x4', '0x5', '0x1', '0x0'], offset 0x14a, current chan 0
     91 NO STORE
 DEBUG: op 0x92, operand ['0x4', '0x80', '0x3e', '0x0', '0x0'], offset 0x150, current chan 0
     91 NO STORE
 DEBUG: op 0x90, operand ['0x5', '0x1b', '0x5', '0x6'], offset 0x155, current chan 0
     90 NO STORE
 DEBUG: op 0x91, operand ['0x5', '0x5', '0x1', '0x0'], offset 0x15a, current chan 0
     91 NO STORE
 DEBUG: op 0x92, operand ['0x5', '0x80', '0x3e', '0x0', '0x0'], offset 0x160, current chan 0
     91 NO STORE
 DEBUG: op 0xb9, operand ['0x0', '0x0'], offset 0x163, current chan 0
set channel: [0]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x166, current chan 0
    chan [0], Data: reg 4, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x1'], offset 0x169, current chan 0
set channel: [1]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x16c, current chan 1
    chan [1], Data: reg 4, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x2'], offset 0x16f, current chan 1
set channel: [2]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x172, current chan 2
    chan [2], Data: reg 4, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x3'], offset 0x175, current chan 2
set channel: [3]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x178, current chan 3
    chan [3], Data: reg 4, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x4'], offset 0x17b, current chan 3
set channel: [4]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x17e, current chan 4
    chan [4], Data: reg 4, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x5'], offset 0x181, current chan 4
set channel: [5]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x184, current chan 5
    chan [5], Data: reg 4, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x0'], offset 0x187, current chan 5
set channel: [0]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x1', '0xff'], offset 0x18a, current chan 0
    chan [0], Data: reg 1, val 255
 DEBUG: op 0xb9, operand ['0x8', '0xff'], offset 0x18d, current chan 0
    chan [0], Data: reg 8, val 255
 DEBUG: op 0xb9, operand ['0x9', '0x0'], offset 0x190, current chan 0
    chan [0], Data: reg 9, val 0
 DEBUG: op 0xb9, operand ['0x0', '0x0'], offset 0x193, current chan 0
set channel: [0]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x5', '0xff'], offset 0x196, current chan 0
    chan [0], Data: reg 5, val 255
 DEBUG: op 0xb9, operand ['0x0', '0x1'], offset 0x199, current chan 0
set channel: [1]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x5', '0xff'], offset 0x19c, current chan 1
    chan [1], Data: reg 5, val 255
 DEBUG: op 0xb9, operand ['0x0', '0x2'], offset 0x19f, current chan 1
set channel: [2]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x5', '0xff'], offset 0x1a2, current chan 2
    chan [2], Data: reg 5, val 255
 DEBUG: op 0xb9, operand ['0x0', '0x3'], offset 0x1a5, current chan 2
set channel: [3]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x5', '0xff'], offset 0x1a8, current chan 3
    chan [3], Data: reg 5, val 255
 DEBUG: op 0xb9, operand ['0x0', '0x4'], offset 0x1ab, current chan 3
set channel: [4]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x5', '0xff'], offset 0x1ae, current chan 4
    chan [4], Data: reg 5, val 255
 DEBUG: op 0xb9, operand ['0x0', '0x5'], offset 0x1b1, current chan 4
set channel: [5]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x5', '0xff'], offset 0x1b4, current chan 5
    chan [5], Data: reg 5, val 255
 DEBUG: op 0xb9, operand ['0x0', '0x0'], offset 0x1b7, current chan 5
set channel: [0]
     B9 NO STORE
 DEBUG: op 0xb9, operand ['0x7', '0x80'], offset 0x1ba, current chan 0
    chan [0], Data: reg 7, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x1bd, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x4', '0x9f'], offset 0x1c0, current chan 0
    chan [0], Data: reg 4, val 159
 DEBUG: op 0xb9, operand ['0x4', '0x81'], offset 0x1c3, current chan 0
    chan [0], Data: reg 4, val 129
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x1c6, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x4', '0x5f'], offset 0x1c9, current chan 0
    chan [0], Data: reg 4, val 95
 DEBUG: op 0xb9, operand ['0x4', '0x1f'], offset 0x1cc, current chan 0
    chan [0], Data: reg 4, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1cf, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1d2, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1d5, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1d8, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1db, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1de, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1e1, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1e4, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1e7, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1ea, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1ed, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1f0, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1f3, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1f6, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x1f'], offset 0x1f9, current chan 0
    chan [0], Data: reg 6, val 31
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x1fc, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x1ff, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x202, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x205, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x208, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x20b, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x20e, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x211, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x214, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x217, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x21a, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x21d, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x220, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x223, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x226, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x229, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x6', '0x0'], offset 0x22c, current chan 0
    chan [0], Data: reg 6, val 0
 DEBUG: op 0xb9, operand ['0x4', '0x81'], offset 0x22f, current chan 0
    chan [0], Data: reg 4, val 129
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x232, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x235, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x236, current chan 0


 frame0, adding {0: [(4, 0), (1, 255), (8, 255), (9, 0), (5, 255), (7, 128), (7, 141), (4, 159), (4, 129), (7, 141), (4, 95), (4, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (4, 129), (2, 78), (3, 6)], 1: [(4, 0), (5, 255)], 2: [(4, 0), (5, 255)], 3: [(4, 0), (5, 255)], 4: [(4, 0), (5, 255)], 5: [(4, 0), (5, 255)]} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x86'], offset 0x239, current chan 0
    chan [0], Data: reg 4, val 134
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x23c, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x23f, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x242, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x243, current chan 0


 frame1, adding {0: [(4, 134), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x8b'], offset 0x246, current chan 0
    chan [0], Data: reg 4, val 139
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x249, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x24c, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x24f, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x250, current chan 0


 frame2, adding {0: [(4, 139), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x93'], offset 0x253, current chan 0
    chan [0], Data: reg 4, val 147
 DEBUG: op 0xb9, operand ['0x7', '0x8f'], offset 0x256, current chan 0
    chan [0], Data: reg 7, val 143
 DEBUG: op 0xb9, operand ['0x2', '0xf4'], offset 0x259, current chan 0
    chan [0], Data: reg 2, val 244
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x25c, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x25d, current chan 0


 frame3, adding {0: [(4, 147), (7, 143), (2, 244), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x95'], offset 0x260, current chan 0
    chan [0], Data: reg 4, val 149
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x263, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x266, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x269, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x26a, current chan 0


 frame4, adding {0: [(4, 149), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x98'], offset 0x26d, current chan 0
    chan [0], Data: reg 4, val 152
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x270, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x273, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x276, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x277, current chan 0


 frame5, adding {0: [(4, 152), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x9a'], offset 0x27a, current chan 0
    chan [0], Data: reg 4, val 154
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x27d, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x280, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x283, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x284, current chan 0


 frame6, adding {0: [(4, 154), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x9b'], offset 0x287, current chan 0
    chan [0], Data: reg 4, val 155
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x28a, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x28d, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x290, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x291, current chan 0


 frame7, adding {0: [(4, 155), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x9d'], offset 0x294, current chan 0
    chan [0], Data: reg 4, val 157
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x297, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x29a, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x29d, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x29e, current chan 0


 frame8, adding {0: [(4, 157), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x9d'], offset 0x2a1, current chan 0
    chan [0], Data: reg 4, val 157
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x2a4, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x2a7, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x2aa, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x2ab, current chan 0


 frame9, adding {0: [(4, 157), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x9d'], offset 0x2ae, current chan 0
    chan [0], Data: reg 4, val 157
 DEBUG: op 0xb9, operand ['0x7', '0x92'], offset 0x2b1, current chan 0
    chan [0], Data: reg 7, val 146
 DEBUG: op 0xb9, operand ['0x2', '0x9e'], offset 0x2b4, current chan 0
    chan [0], Data: reg 2, val 158
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x2b7, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x2b8, current chan 0


 frame10, adding {0: [(4, 157), (7, 146), (2, 158), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x9b'], offset 0x2bb, current chan 0
    chan [0], Data: reg 4, val 155
 DEBUG: op 0xb9, operand ['0x7', '0x8f'], offset 0x2be, current chan 0
    chan [0], Data: reg 7, val 143
 DEBUG: op 0xb9, operand ['0x2', '0xf4'], offset 0x2c1, current chan 0
    chan [0], Data: reg 2, val 244
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x2c4, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x2c5, current chan 0


 frame11, adding {0: [(4, 155), (7, 143), (2, 244), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x98'], offset 0x2c8, current chan 0
    chan [0], Data: reg 4, val 152
 DEBUG: op 0xb9, operand ['0x7', '0x8f'], offset 0x2cb, current chan 0
    chan [0], Data: reg 7, val 143
 DEBUG: op 0xb9, operand ['0x2', '0xf4'], offset 0x2ce, current chan 0
    chan [0], Data: reg 2, val 244
 DEBUG: op 0xb9, operand ['0x3', '0x5'], offset 0x2d1, current chan 0
    chan [0], Data: reg 3, val 5
 DEBUG: op 0x62, operand [], offset 0x2d2, current chan 0


 frame12, adding {0: [(4, 152), (7, 143), (2, 244), (3, 5)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x94'], offset 0x2d5, current chan 0
    chan [0], Data: reg 4, val 148
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x2d8, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x2db, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x2de, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x2df, current chan 0


 frame13, adding {0: [(4, 148), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x87'], offset 0x2e2, current chan 0
    chan [0], Data: reg 4, val 135
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x2e5, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x2e8, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x2eb, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x2ec, current chan 0


 frame14, adding {0: [(4, 135), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x84'], offset 0x2ef, current chan 0
    chan [0], Data: reg 4, val 132
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x2f2, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x2f5, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x2f8, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x2f9, current chan 0


 frame15, adding {0: [(4, 132), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x82'], offset 0x2fc, current chan 0
    chan [0], Data: reg 4, val 130
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x2ff, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x302, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x305, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x306, current chan 0


 frame16, adding {0: [(4, 130), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x80'], offset 0x309, current chan 0
    chan [0], Data: reg 4, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x30c, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x30f, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x312, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x313, current chan 0


 frame17, adding {0: [(4, 128), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x80'], offset 0x316, current chan 0
    chan [0], Data: reg 4, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x319, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x31c, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x31f, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x320, current chan 0


 frame18, adding {0: [(4, 128), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x80'], offset 0x323, current chan 0
    chan [0], Data: reg 4, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x326, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x329, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x32c, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x32d, current chan 0


 frame19, adding {0: [(4, 128), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x80'], offset 0x330, current chan 0
    chan [0], Data: reg 4, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x333, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x336, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x339, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x33a, current chan 0


 frame20, adding {0: [(4, 128), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x80'], offset 0x33d, current chan 0
    chan [0], Data: reg 4, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x340, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x343, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x346, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x347, current chan 0


 frame21, adding {0: [(4, 128), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x4', '0x80'], offset 0x34a, current chan 0
    chan [0], Data: reg 4, val 128
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x34d, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x350, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x353, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x354, current chan 0


 frame22, adding {0: [(4, 128), (7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x357, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x35a, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x35d, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x35e, current chan 0


 frame23, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x361, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x364, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x367, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x368, current chan 0


 frame24, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x36b, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x36e, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x371, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x372, current chan 0


 frame25, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x375, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x378, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x37b, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x37c, current chan 0


 frame26, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x37f, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x382, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x385, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x386, current chan 0


 frame27, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x389, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x38c, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x38f, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x390, current chan 0


 frame28, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x393, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x396, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x399, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x39a, current chan 0


 frame29, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x39d, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3a0, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3a3, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3a4, current chan 0


 frame30, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3a7, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3aa, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3ad, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3ae, current chan 0


 frame31, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3b1, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3b4, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3b7, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3b8, current chan 0


 frame32, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3bb, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3be, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3c1, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3c2, current chan 0


 frame33, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3c5, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3c8, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3cb, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3cc, current chan 0


 frame34, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3cf, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3d2, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3d5, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3d6, current chan 0


 frame35, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3d9, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3dc, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3df, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3e0, current chan 0


 frame36, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3e3, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3e6, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3e9, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3ea, current chan 0


 frame37, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3ed, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3f0, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3f3, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3f4, current chan 0


 frame38, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0xb9, operand ['0x7', '0x8d'], offset 0x3f7, current chan 0
    chan [0], Data: reg 7, val 141
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x3fa, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x3fd, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0x62, operand [], offset 0x3fe, current chan 0


 frame39, adding {0: [(7, 141), (2, 78), (3, 6)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x94, operand ['0x0'], offset 0x400, current chan 0
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& found op 0x94 at offset 0x400, [0], chan 0
PCM PCM PCM    chan [0], Data: 148, 0
 DEBUG: op 0xb9, operand ['0x7', '0x0'], offset 0x403, current chan 0
    chan [0], Data: reg 7, val 0
 DEBUG: op 0xb9, operand ['0x2', '0x4e'], offset 0x406, current chan 0
    chan [0], Data: reg 2, val 78
 DEBUG: op 0xb9, operand ['0x3', '0x6'], offset 0x409, current chan 0
    chan [0], Data: reg 3, val 6
 DEBUG: op 0xb9, operand ['0x4', '0x0'], offset 0x40c, current chan 0
    chan [0], Data: reg 4, val 0
 DEBUG: op 0x62, operand [], offset 0x40d, current chan 0


 frame40, adding {0: [(148, 0), (7, 0), (2, 78), (3, 6), (4, 0)], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x40e, current chan 0


 frame41, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x40f, current chan 0


 frame42, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x410, current chan 0


 frame43, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x411, current chan 0


 frame44, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x412, current chan 0


 frame45, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x413, current chan 0


 frame46, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x414, current chan 0


 frame47, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x415, current chan 0


 frame48, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x416, current chan 0


 frame49, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x417, current chan 0


 frame50, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x418, current chan 0


 frame51, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x419, current chan 0


 frame52, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x41a, current chan 0


 frame53, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x41b, current chan 0


 frame54, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x41c, current chan 0


 frame55, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x41d, current chan 0


 frame56, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x41e, current chan 0


 frame57, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x41f, current chan 0


 frame58, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x420, current chan 0


 frame59, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x421, current chan 0


 frame60, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x422, current chan 0


 frame61, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x423, current chan 0


 frame62, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x424, current chan 0


 frame63, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x425, current chan 0


 frame64, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x426, current chan 0


 frame65, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x427, current chan 0


 frame66, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x428, current chan 0


 frame67, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x429, current chan 0


 frame68, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x42a, current chan 0


 frame69, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x42b, current chan 0


 frame70, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x42c, current chan 0


 frame71, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x42d, current chan 0


 frame72, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x42e, current chan 0


 frame73, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x42f, current chan 0


 frame74, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x430, current chan 0


 frame75, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x431, current chan 0


 frame76, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x432, current chan 0


 frame77, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x433, current chan 0


 frame78, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x62, operand [], offset 0x434, current chan 0


 frame79, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
 DEBUG: op 0x66, operand [], offset 0x435, current chan 0


 frame80, adding {0: [], 1: [], 2: [], 3: [], 4: [], 5: []} 


###  Frame end!  #####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$



{0: [[(4, 0), (1, 255), (8, 255), (9, 0), (5, 255), (7, 128), (7, 141), (4, 159), (4, 129), (7, 141), (4, 95), (4, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 31), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (6, 0), (4, 129), (2, 78), (3, 6)], [(4, 134), (7, 141), (2, 78), (3, 6)], [(4, 139), (7, 141), (2, 78), (3, 6)], [(4, 147), (7, 143), (2, 244), (3, 5)], [(4, 149), (7, 146), (2, 158), (3, 5)], [(4, 152), (7, 146), (2, 158), (3, 5)], [(4, 154), (7, 146), (2, 158), (3, 5)], [(4, 155), (7, 146), (2, 158), (3, 5)], [(4, 157), (7, 146), (2, 158), (3, 5)], [(4, 157), (7, 146), (2, 158), (3, 5)], [(4, 157), (7, 146), (2, 158), (3, 5)], [(4, 155), (7, 143), (2, 244), (3, 5)], [(4, 152), (7, 143), (2, 244), (3, 5)], [(4, 148), (7, 141), (2, 78), (3, 6)], [(4, 135), (7, 141), (2, 78), (3, 6)], [(4, 132), (7, 141), (2, 78), (3, 6)], [(4, 130), (7, 141), (2, 78), (3, 6)], [(4, 128), (7, 141), (2, 78), (3, 6)], [(4, 128), (7, 141), (2, 78), (3, 6)], [(4, 128), (7, 141), (2, 78), (3, 6)], [(4, 128), (7, 141), (2, 78), (3, 6)], [(4, 128), (7, 141), (2, 78), (3, 6)], [(4, 128), (7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(7, 141), (2, 78), (3, 6)], [(148, 0), (7, 0), (2, 78), (3, 6), (4, 0)], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], 1: [[(4, 0), (5, 255)], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], 2: [[(4, 0), (5, 255)], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], 3: [[(4, 0), (5, 255)], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], 4: [[(4, 0), (5, 255)], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], 5: [[(4, 0), (5, 255)], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []], 'num_frames': 81}



reg    [4], channel [0]
reg    [1], channel [0]
reg    [8], channel [0]
reg    [9], channel [0]
reg    [5], channel [0]
reg    [7], channel [0]
reg    [7], channel [0]
reg    [4], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [4], channel [0]
reg    [4], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [6], channel [0]
reg    [4], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [148], channel [0]
reg    [7], channel [0]
reg    [2], channel [0]
reg    [3], channel [0]
reg    [4], channel [0]
reg    [4], channel [1]
reg    [5], channel [1]
reg    [4], channel [2]
reg    [5], channel [2]
reg    [4], channel [3]
reg    [5], channel [3]
reg    [4], channel [4]
reg    [5], channel [4]
reg    [4], channel [5]
reg    [5], channel [5]
############################################### waveform prep

 
[31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
{3840, 4096, 4352, 4608, 4864, 5120, 5376, 5632, 5888, 6144, 3615, 287, 1311, 2335, 3359, 543, 31, 1567, 2079, 2591, 3103, 799, 1055, 6400, 6656, 1823, 6912, 7168, 7424, 7680, 2847, 7936}
waveform list len 3
############################################### waveform list

 
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 0, chan 0
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: reg 0x1 , data [255], frame 0, chan 0
       reg convert: reg 0xa1 , data 255
@@@@@@@@@ reg convert: reg 0x8 , data [255], frame 0, chan 0
       reg convert: reg 0xa8 , data 255
@@@@@@@@@ reg convert: reg 0x9 , data [0], frame 0, chan 0
       reg convert: reg 0xa9 , data 0
@@@@@@@@@ reg convert: reg 0x5 , data [255], frame 0, chan 0
       reg convert: reg 0xa5 , data 255
@@@@@@@@@ reg convert: reg 0x7 , data [128], frame 0, chan 0
       reg convert: reg 0xa7 , data 128
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 0, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x4 , data [159], frame 0, chan 0
       reg convert: reg 0x9f , data [159]
@@@@@@@@@ reg convert: reg 0x4 , data [129], frame 0, chan 0
       reg convert: reg 0x81 , data [129]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 0, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x4 , data [95], frame 0, chan 0
       reg convert: reg 0x5f , data [95]
@@@@@@@@@ reg convert: reg 0x4 , data [31], frame 0, chan 0
       reg convert: reg 0x1f , data [31]
@@@@@@@@@ reg convert: reg 0x10 , data [2], frame 0, chan 0
       reg convert: reg 0xb0 , data 2
@@@@@@@@@ reg convert: reg 0x4 , data [129], frame 0, chan 0
       reg convert: reg 0x81 , data [129]
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 0, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [134], frame 1, chan 0
       reg convert: reg 0x86 , data [134]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 1, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 1, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [139], frame 2, chan 0
       reg convert: reg 0x8b , data [139]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 2, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 2, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [147], frame 3, chan 0
       reg convert: reg 0x93 , data [147]
@@@@@@@@@ reg convert: reg 0x7 , data [143], frame 3, chan 0
       reg convert: reg 0xa7 , data 143
@@@@@@@@@ reg convert: reg 0x2 , data [244, 5], frame 3, chan 0
       reg convert: reg 0xc5 , data 244
@@@@@@@@@ reg convert: reg 0x4 , data [149], frame 4, chan 0
       reg convert: reg 0x95 , data [149]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 4, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 4, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [152], frame 5, chan 0
       reg convert: reg 0x98 , data [152]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 5, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 5, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [154], frame 6, chan 0
       reg convert: reg 0x9a , data [154]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 6, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 6, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [155], frame 7, chan 0
       reg convert: reg 0x9b , data [155]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 7, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 7, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [157], frame 8, chan 0
       reg convert: reg 0x9d , data [157]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 8, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 8, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [157], frame 9, chan 0
       reg convert: reg 0x9d , data [157]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 9, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 9, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [157], frame 10, chan 0
       reg convert: reg 0x9d , data [157]
@@@@@@@@@ reg convert: reg 0x7 , data [146], frame 10, chan 0
       reg convert: reg 0xa7 , data 146
@@@@@@@@@ reg convert: reg 0x2 , data [158, 5], frame 10, chan 0
       reg convert: reg 0xc5 , data 158
@@@@@@@@@ reg convert: reg 0x4 , data [155], frame 11, chan 0
       reg convert: reg 0x9b , data [155]
@@@@@@@@@ reg convert: reg 0x7 , data [143], frame 11, chan 0
       reg convert: reg 0xa7 , data 143
@@@@@@@@@ reg convert: reg 0x2 , data [244, 5], frame 11, chan 0
       reg convert: reg 0xc5 , data 244
@@@@@@@@@ reg convert: reg 0x4 , data [152], frame 12, chan 0
       reg convert: reg 0x98 , data [152]
@@@@@@@@@ reg convert: reg 0x7 , data [143], frame 12, chan 0
       reg convert: reg 0xa7 , data 143
@@@@@@@@@ reg convert: reg 0x2 , data [244, 5], frame 12, chan 0
       reg convert: reg 0xc5 , data 244
@@@@@@@@@ reg convert: reg 0x4 , data [148], frame 13, chan 0
       reg convert: reg 0x94 , data [148]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 13, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 13, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [135], frame 14, chan 0
       reg convert: reg 0x87 , data [135]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 14, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 14, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [132], frame 15, chan 0
       reg convert: reg 0x84 , data [132]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 15, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 15, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [130], frame 16, chan 0
       reg convert: reg 0x82 , data [130]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 16, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 16, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [128], frame 17, chan 0
       reg convert: reg 0x80 , data [128]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 17, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 17, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [128], frame 18, chan 0
       reg convert: reg 0x80 , data [128]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 18, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 18, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [128], frame 19, chan 0
       reg convert: reg 0x80 , data [128]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 19, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 19, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [128], frame 20, chan 0
       reg convert: reg 0x80 , data [128]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 20, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 20, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [128], frame 21, chan 0
       reg convert: reg 0x80 , data [128]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 21, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 21, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [128], frame 22, chan 0
       reg convert: reg 0x80 , data [128]
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 22, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 22, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 23, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 23, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 24, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 24, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 25, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 25, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 26, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 26, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 27, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 27, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 28, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 28, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 29, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 29, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 30, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 30, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 31, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 31, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 32, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 32, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 33, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 33, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 34, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 34, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 35, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 35, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 36, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 36, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 37, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 37, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 38, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 38, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x7 , data [141], frame 39, chan 0
       reg convert: reg 0xa7 , data 141
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 39, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x94 , data [0], frame 40, chan 0
       reg convert: reg 0xfd , data [0]
@@@@@@@@@ reg convert: reg 0x7 , data [0], frame 40, chan 0
       reg convert: reg 0xa7 , data 0
@@@@@@@@@ reg convert: reg 0x2 , data [78, 6], frame 40, chan 0
       reg convert: reg 0xc6 , data 78
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 40, chan 0
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: ** empty ** , frame 41, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 42, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 43, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 44, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 45, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 46, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 47, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 48, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 49, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 50, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 51, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 52, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 53, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 54, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 55, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 56, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 57, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 58, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 59, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 60, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 61, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 62, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 63, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 64, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 65, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 66, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 67, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 68, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 69, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 70, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 71, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 72, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 73, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 74, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 75, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 76, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 77, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 78, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 79, chan 0
@@@@@@@@@ reg convert: ** empty ** , frame 80, chan 0
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 0, chan 1
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: reg 0x5 , data [255], frame 0, chan 1
       reg convert: reg 0xa5 , data 255
@@@@@@@@@ reg convert: ** empty ** , frame 1, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 2, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 3, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 4, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 5, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 6, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 7, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 8, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 9, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 10, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 11, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 12, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 13, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 14, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 15, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 16, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 17, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 18, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 19, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 20, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 21, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 22, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 23, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 24, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 25, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 26, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 27, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 28, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 29, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 30, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 31, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 32, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 33, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 34, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 35, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 36, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 37, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 38, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 39, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 40, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 41, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 42, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 43, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 44, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 45, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 46, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 47, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 48, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 49, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 50, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 51, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 52, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 53, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 54, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 55, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 56, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 57, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 58, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 59, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 60, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 61, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 62, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 63, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 64, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 65, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 66, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 67, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 68, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 69, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 70, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 71, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 72, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 73, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 74, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 75, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 76, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 77, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 78, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 79, chan 1
@@@@@@@@@ reg convert: ** empty ** , frame 80, chan 1
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 0, chan 2
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: reg 0x5 , data [255], frame 0, chan 2
       reg convert: reg 0xa5 , data 255
@@@@@@@@@ reg convert: ** empty ** , frame 1, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 2, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 3, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 4, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 5, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 6, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 7, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 8, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 9, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 10, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 11, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 12, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 13, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 14, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 15, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 16, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 17, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 18, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 19, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 20, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 21, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 22, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 23, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 24, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 25, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 26, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 27, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 28, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 29, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 30, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 31, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 32, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 33, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 34, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 35, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 36, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 37, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 38, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 39, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 40, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 41, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 42, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 43, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 44, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 45, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 46, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 47, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 48, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 49, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 50, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 51, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 52, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 53, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 54, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 55, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 56, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 57, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 58, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 59, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 60, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 61, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 62, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 63, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 64, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 65, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 66, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 67, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 68, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 69, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 70, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 71, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 72, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 73, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 74, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 75, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 76, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 77, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 78, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 79, chan 2
@@@@@@@@@ reg convert: ** empty ** , frame 80, chan 2
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 0, chan 3
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: reg 0x5 , data [255], frame 0, chan 3
       reg convert: reg 0xa5 , data 255
@@@@@@@@@ reg convert: ** empty ** , frame 1, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 2, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 3, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 4, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 5, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 6, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 7, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 8, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 9, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 10, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 11, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 12, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 13, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 14, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 15, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 16, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 17, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 18, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 19, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 20, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 21, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 22, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 23, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 24, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 25, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 26, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 27, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 28, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 29, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 30, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 31, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 32, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 33, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 34, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 35, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 36, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 37, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 38, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 39, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 40, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 41, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 42, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 43, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 44, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 45, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 46, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 47, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 48, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 49, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 50, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 51, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 52, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 53, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 54, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 55, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 56, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 57, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 58, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 59, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 60, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 61, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 62, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 63, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 64, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 65, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 66, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 67, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 68, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 69, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 70, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 71, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 72, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 73, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 74, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 75, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 76, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 77, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 78, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 79, chan 3
@@@@@@@@@ reg convert: ** empty ** , frame 80, chan 3
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 0, chan 4
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: reg 0x5 , data [255], frame 0, chan 4
       reg convert: reg 0xa5 , data 255
@@@@@@@@@ reg convert: ** empty ** , frame 1, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 2, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 3, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 4, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 5, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 6, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 7, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 8, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 9, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 10, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 11, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 12, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 13, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 14, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 15, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 16, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 17, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 18, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 19, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 20, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 21, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 22, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 23, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 24, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 25, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 26, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 27, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 28, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 29, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 30, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 31, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 32, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 33, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 34, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 35, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 36, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 37, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 38, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 39, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 40, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 41, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 42, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 43, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 44, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 45, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 46, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 47, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 48, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 49, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 50, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 51, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 52, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 53, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 54, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 55, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 56, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 57, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 58, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 59, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 60, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 61, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 62, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 63, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 64, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 65, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 66, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 67, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 68, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 69, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 70, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 71, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 72, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 73, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 74, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 75, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 76, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 77, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 78, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 79, chan 4
@@@@@@@@@ reg convert: ** empty ** , frame 80, chan 4
@@@@@@@@@ reg convert: reg 0x4 , data [0], frame 0, chan 5
       reg convert: reg 0x0 , data [0]
@@@@@@@@@ reg convert: reg 0x5 , data [255], frame 0, chan 5
       reg convert: reg 0xa5 , data 255
@@@@@@@@@ reg convert: ** empty ** , frame 1, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 2, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 3, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 4, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 5, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 6, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 7, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 8, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 9, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 10, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 11, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 12, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 13, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 14, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 15, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 16, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 17, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 18, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 19, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 20, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 21, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 22, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 23, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 24, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 25, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 26, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 27, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 28, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 29, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 30, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 31, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 32, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 33, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 34, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 35, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 36, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 37, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 38, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 39, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 40, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 41, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 42, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 43, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 44, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 45, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 46, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 47, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 48, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 49, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 50, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 51, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 52, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 53, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 54, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 55, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 56, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 57, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 58, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 59, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 60, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 61, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 62, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 63, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 64, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 65, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 66, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 67, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 68, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 69, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 70, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 71, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 72, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 73, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 74, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 75, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 76, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 77, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 78, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 79, chan 5
@@@@@@@@@ reg convert: ** empty ** , frame 80, chan 5
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% bin len 223 , 319
289
Channel: 0


    Frame: 0
            Reg: 4, data: ['0x0']
            Reg: 1, data: ['0xff']
            Reg: 8, data: ['0xff']
            Reg: 9, data: ['0x0']
            Reg: 5, data: ['0xff']
            Reg: 7, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 4, data: ['0x9f']
            Reg: 4, data: ['0x81']
            Reg: 7, data: ['0x8d']
            Reg: 4, data: ['0x5f']
            Reg: 4, data: ['0x1f']
            Reg: 16, data: ['0x2']
            Reg: 4, data: ['0x81']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 1
            Reg: 4, data: ['0x86']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 2
            Reg: 4, data: ['0x8b']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 3
            Reg: 4, data: ['0x93']
            Reg: 7, data: ['0x8f']
            Reg: 2, data: ['0xf4', '0x5']
    Frame: 4
            Reg: 4, data: ['0x95']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 5
            Reg: 4, data: ['0x98']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 6
            Reg: 4, data: ['0x9a']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 7
            Reg: 4, data: ['0x9b']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 8
            Reg: 4, data: ['0x9d']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 9
            Reg: 4, data: ['0x9d']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 10
            Reg: 4, data: ['0x9d']
            Reg: 7, data: ['0x92']
            Reg: 2, data: ['0x9e', '0x5']
    Frame: 11
            Reg: 4, data: ['0x9b']
            Reg: 7, data: ['0x8f']
            Reg: 2, data: ['0xf4', '0x5']
    Frame: 12
            Reg: 4, data: ['0x98']
            Reg: 7, data: ['0x8f']
            Reg: 2, data: ['0xf4', '0x5']
    Frame: 13
            Reg: 4, data: ['0x94']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 14
            Reg: 4, data: ['0x87']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 15
            Reg: 4, data: ['0x84']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 16
            Reg: 4, data: ['0x82']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 17
            Reg: 4, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 18
            Reg: 4, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 19
            Reg: 4, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 20
            Reg: 4, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 21
            Reg: 4, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 22
            Reg: 4, data: ['0x80']
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 23
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 24
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 25
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 26
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 27
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 28
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 29
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 30
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 31
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 32
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 33
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 34
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 35
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 36
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 37
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 38
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 39
            Reg: 7, data: ['0x8d']
            Reg: 2, data: ['0x4e', '0x6']
    Frame: 40
            Reg: 148, data: ['0x0']
            Reg: 7, data: ['0x0']
            Reg: 2, data: ['0x4e', '0x6']
            Reg: 4, data: ['0x0']
    Frame: 41
        ... empty
    Frame: 42
        ... empty
    Frame: 43
        ... empty
    Frame: 44
        ... empty
    Frame: 45
        ... empty
    Frame: 46
        ... empty
    Frame: 47
        ... empty
    Frame: 48
        ... empty
    Frame: 49
        ... empty
    Frame: 50
        ... empty
    Frame: 51
        ... empty
    Frame: 52
        ... empty
    Frame: 53
        ... empty
    Frame: 54
        ... empty
    Frame: 55
        ... empty
    Frame: 56
        ... empty
    Frame: 57
        ... empty
    Frame: 58
        ... empty
    Frame: 59
        ... empty
    Frame: 60
        ... empty
    Frame: 61
        ... empty
    Frame: 62
        ... empty
    Frame: 63
        ... empty
    Frame: 64
        ... empty
    Frame: 65
        ... empty
    Frame: 66
        ... empty
    Frame: 67
        ... empty
    Frame: 68
        ... empty
    Frame: 69
        ... empty
    Frame: 70
        ... empty
    Frame: 71
        ... empty
    Frame: 72
        ... empty
    Frame: 73
        ... empty
    Frame: 74
        ... empty
    Frame: 75
        ... empty
    Frame: 76
        ... empty
    Frame: 77
        ... empty
    Frame: 78
        ... empty
    Frame: 79
        ... empty
    Frame: 80
        ... empty
Channel: 1


    Frame: 0
            Reg: 4, data: ['0x0']
            Reg: 5, data: ['0xff']
    Frame: 1
        ... empty
    Frame: 2
        ... empty
    Frame: 3
        ... empty
    Frame: 4
        ... empty
    Frame: 5
        ... empty
    Frame: 6
        ... empty
    Frame: 7
        ... empty
    Frame: 8
        ... empty
    Frame: 9
        ... empty
    Frame: 10
        ... empty
    Frame: 11
        ... empty
    Frame: 12
        ... empty
    Frame: 13
        ... empty
    Frame: 14
        ... empty
    Frame: 15
        ... empty
    Frame: 16
        ... empty
    Frame: 17
        ... empty
    Frame: 18
        ... empty
    Frame: 19
        ... empty
    Frame: 20
        ... empty
    Frame: 21
        ... empty
    Frame: 22
        ... empty
    Frame: 23
        ... empty
    Frame: 24
        ... empty
    Frame: 25
        ... empty
    Frame: 26
        ... empty
    Frame: 27
        ... empty
    Frame: 28
        ... empty
    Frame: 29
        ... empty
    Frame: 30
        ... empty
    Frame: 31
        ... empty
    Frame: 32
        ... empty
    Frame: 33
        ... empty
    Frame: 34
        ... empty
    Frame: 35
        ... empty
    Frame: 36
        ... empty
    Frame: 37
        ... empty
    Frame: 38
        ... empty
    Frame: 39
        ... empty
    Frame: 40
        ... empty
    Frame: 41
        ... empty
    Frame: 42
        ... empty
    Frame: 43
        ... empty
    Frame: 44
        ... empty
    Frame: 45
        ... empty
    Frame: 46
        ... empty
    Frame: 47
        ... empty
    Frame: 48
        ... empty
    Frame: 49
        ... empty
    Frame: 50
        ... empty
    Frame: 51
        ... empty
    Frame: 52
        ... empty
    Frame: 53
        ... empty
    Frame: 54
        ... empty
    Frame: 55
        ... empty
    Frame: 56
        ... empty
    Frame: 57
        ... empty
    Frame: 58
        ... empty
    Frame: 59
        ... empty
    Frame: 60
        ... empty
    Frame: 61
        ... empty
    Frame: 62
        ... empty
    Frame: 63
        ... empty
    Frame: 64
        ... empty
    Frame: 65
        ... empty
    Frame: 66
        ... empty
    Frame: 67
        ... empty
    Frame: 68
        ... empty
    Frame: 69
        ... empty
    Frame: 70
        ... empty
    Frame: 71
        ... empty
    Frame: 72
        ... empty
    Frame: 73
        ... empty
    Frame: 74
        ... empty
    Frame: 75
        ... empty
    Frame: 76
        ... empty
    Frame: 77
        ... empty
    Frame: 78
        ... empty
    Frame: 79
        ... empty
    Frame: 80
        ... empty
Channel: 2


    Frame: 0
            Reg: 4, data: ['0x0']
            Reg: 5, data: ['0xff']
    Frame: 1
        ... empty
    Frame: 2
        ... empty
    Frame: 3
        ... empty
    Frame: 4
        ... empty
    Frame: 5
        ... empty
    Frame: 6
        ... empty
    Frame: 7
        ... empty
    Frame: 8
        ... empty
    Frame: 9
        ... empty
    Frame: 10
        ... empty
    Frame: 11
        ... empty
    Frame: 12
        ... empty
    Frame: 13
        ... empty
    Frame: 14
        ... empty
    Frame: 15
        ... empty
    Frame: 16
        ... empty
    Frame: 17
        ... empty
    Frame: 18
        ... empty
    Frame: 19
        ... empty
    Frame: 20
        ... empty
    Frame: 21
        ... empty
    Frame: 22
        ... empty
    Frame: 23
        ... empty
    Frame: 24
        ... empty
    Frame: 25
        ... empty
    Frame: 26
        ... empty
    Frame: 27
        ... empty
    Frame: 28
        ... empty
    Frame: 29
        ... empty
    Frame: 30
        ... empty
    Frame: 31
        ... empty
    Frame: 32
        ... empty
    Frame: 33
        ... empty
    Frame: 34
        ... empty
    Frame: 35
        ... empty
    Frame: 36
        ... empty
    Frame: 37
        ... empty
    Frame: 38
        ... empty
    Frame: 39
        ... empty
    Frame: 40
        ... empty
    Frame: 41
        ... empty
    Frame: 42
        ... empty
    Frame: 43
        ... empty
    Frame: 44
        ... empty
    Frame: 45
        ... empty
    Frame: 46
        ... empty
    Frame: 47
        ... empty
    Frame: 48
        ... empty
    Frame: 49
        ... empty
    Frame: 50
        ... empty
    Frame: 51
        ... empty
    Frame: 52
        ... empty
    Frame: 53
        ... empty
    Frame: 54
        ... empty
    Frame: 55
        ... empty
    Frame: 56
        ... empty
    Frame: 57
        ... empty
    Frame: 58
        ... empty
    Frame: 59
        ... empty
    Frame: 60
        ... empty
    Frame: 61
        ... empty
    Frame: 62
        ... empty
    Frame: 63
        ... empty
    Frame: 64
        ... empty
    Frame: 65
        ... empty
    Frame: 66
        ... empty
    Frame: 67
        ... empty
    Frame: 68
        ... empty
    Frame: 69
        ... empty
    Frame: 70
        ... empty
    Frame: 71
        ... empty
    Frame: 72
        ... empty
    Frame: 73
        ... empty
    Frame: 74
        ... empty
    Frame: 75
        ... empty
    Frame: 76
        ... empty
    Frame: 77
        ... empty
    Frame: 78
        ... empty
    Frame: 79
        ... empty
    Frame: 80
        ... empty
Channel: 3


    Frame: 0
            Reg: 4, data: ['0x0']
            Reg: 5, data: ['0xff']
    Frame: 1
        ... empty
    Frame: 2
        ... empty
    Frame: 3
        ... empty
    Frame: 4
        ... empty
    Frame: 5
        ... empty
    Frame: 6
        ... empty
    Frame: 7
        ... empty
    Frame: 8
        ... empty
    Frame: 9
        ... empty
    Frame: 10
        ... empty
    Frame: 11
        ... empty
    Frame: 12
        ... empty
    Frame: 13
        ... empty
    Frame: 14
        ... empty
    Frame: 15
        ... empty
    Frame: 16
        ... empty
    Frame: 17
        ... empty
    Frame: 18
        ... empty
    Frame: 19
        ... empty
    Frame: 20
        ... empty
    Frame: 21
        ... empty
    Frame: 22
        ... empty
    Frame: 23
        ... empty
    Frame: 24
        ... empty
    Frame: 25
        ... empty
    Frame: 26
        ... empty
    Frame: 27
        ... empty
    Frame: 28
        ... empty
    Frame: 29
        ... empty
    Frame: 30
        ... empty
    Frame: 31
        ... empty
    Frame: 32
        ... empty
    Frame: 33
        ... empty
    Frame: 34
        ... empty
    Frame: 35
        ... empty
    Frame: 36
        ... empty
    Frame: 37
        ... empty
    Frame: 38
        ... empty
    Frame: 39
        ... empty
    Frame: 40
        ... empty
    Frame: 41
        ... empty
    Frame: 42
        ... empty
    Frame: 43
        ... empty
    Frame: 44
        ... empty
    Frame: 45
        ... empty
    Frame: 46
        ... empty
    Frame: 47
        ... empty
    Frame: 48
        ... empty
    Frame: 49
        ... empty
    Frame: 50
        ... empty
    Frame: 51
        ... empty
    Frame: 52
        ... empty
    Frame: 53
        ... empty
    Frame: 54
        ... empty
    Frame: 55
        ... empty
    Frame: 56
        ... empty
    Frame: 57
        ... empty
    Frame: 58
        ... empty
    Frame: 59
        ... empty
    Frame: 60
        ... empty
    Frame: 61
        ... empty
    Frame: 62
        ... empty
    Frame: 63
        ... empty
    Frame: 64
        ... empty
    Frame: 65
        ... empty
    Frame: 66
        ... empty
    Frame: 67
        ... empty
    Frame: 68
        ... empty
    Frame: 69
        ... empty
    Frame: 70
        ... empty
    Frame: 71
        ... empty
    Frame: 72
        ... empty
    Frame: 73
        ... empty
    Frame: 74
        ... empty
    Frame: 75
        ... empty
    Frame: 76
        ... empty
    Frame: 77
        ... empty
    Frame: 78
        ... empty
    Frame: 79
        ... empty
    Frame: 80
        ... empty
Channel: 4


    Frame: 0
            Reg: 4, data: ['0x0']
            Reg: 5, data: ['0xff']
    Frame: 1
        ... empty
    Frame: 2
        ... empty
    Frame: 3
        ... empty
    Frame: 4
        ... empty
    Frame: 5
        ... empty
    Frame: 6
        ... empty
    Frame: 7
        ... empty
    Frame: 8
        ... empty
    Frame: 9
        ... empty
    Frame: 10
        ... empty
    Frame: 11
        ... empty
    Frame: 12
        ... empty
    Frame: 13
        ... empty
    Frame: 14
        ... empty
    Frame: 15
        ... empty
    Frame: 16
        ... empty
    Frame: 17
        ... empty
    Frame: 18
        ... empty
    Frame: 19
        ... empty
    Frame: 20
        ... empty
    Frame: 21
        ... empty
    Frame: 22
        ... empty
    Frame: 23
        ... empty
    Frame: 24
        ... empty
    Frame: 25
        ... empty
    Frame: 26
        ... empty
    Frame: 27
        ... empty
    Frame: 28
        ... empty
    Frame: 29
        ... empty
    Frame: 30
        ... empty
    Frame: 31
        ... empty
    Frame: 32
        ... empty
    Frame: 33
        ... empty
    Frame: 34
        ... empty
    Frame: 35
        ... empty
    Frame: 36
        ... empty
    Frame: 37
        ... empty
    Frame: 38
        ... empty
    Frame: 39
        ... empty
    Frame: 40
        ... empty
    Frame: 41
        ... empty
    Frame: 42
        ... empty
    Frame: 43
        ... empty
    Frame: 44
        ... empty
    Frame: 45
        ... empty
    Frame: 46
        ... empty
    Frame: 47
        ... empty
    Frame: 48
        ... empty
    Frame: 49
        ... empty
    Frame: 50
        ... empty
    Frame: 51
        ... empty
    Frame: 52
        ... empty
    Frame: 53
        ... empty
    Frame: 54
        ... empty
    Frame: 55
        ... empty
    Frame: 56
        ... empty
    Frame: 57
        ... empty
    Frame: 58
        ... empty
    Frame: 59
        ... empty
    Frame: 60
        ... empty
    Frame: 61
        ... empty
    Frame: 62
        ... empty
    Frame: 63
        ... empty
    Frame: 64
        ... empty
    Frame: 65
        ... empty
    Frame: 66
        ... empty
    Frame: 67
        ... empty
    Frame: 68
        ... empty
    Frame: 69
        ... empty
    Frame: 70
        ... empty
    Frame: 71
        ... empty
    Frame: 72
        ... empty
    Frame: 73
        ... empty
    Frame: 74
        ... empty
    Frame: 75
        ... empty
    Frame: 76
        ... empty
    Frame: 77
        ... empty
    Frame: 78
        ... empty
    Frame: 79
        ... empty
    Frame: 80
        ... empty
Channel: 5


    Frame: 0
            Reg: 4, data: ['0x0']
            Reg: 5, data: ['0xff']
    Frame: 1
        ... empty
    Frame: 2
        ... empty
    Frame: 3
        ... empty
    Frame: 4
        ... empty
    Frame: 5
        ... empty
    Frame: 6
        ... empty
    Frame: 7
        ... empty
    Frame: 8
        ... empty
    Frame: 9
        ... empty
    Frame: 10
        ... empty
    Frame: 11
        ... empty
    Frame: 12
        ... empty
    Frame: 13
        ... empty
    Frame: 14
        ... empty
    Frame: 15
        ... empty
    Frame: 16
        ... empty
    Frame: 17
        ... empty
    Frame: 18
        ... empty
    Frame: 19
        ... empty
    Frame: 20
        ... empty
    Frame: 21
        ... empty
    Frame: 22
        ... empty
    Frame: 23
        ... empty
    Frame: 24
        ... empty
    Frame: 25
        ... empty
    Frame: 26
        ... empty
    Frame: 27
        ... empty
    Frame: 28
        ... empty
    Frame: 29
        ... empty
    Frame: 30
        ... empty
    Frame: 31
        ... empty
    Frame: 32
        ... empty
    Frame: 33
        ... empty
    Frame: 34
        ... empty
    Frame: 35
        ... empty
    Frame: 36
        ... empty
    Frame: 37
        ... empty
    Frame: 38
        ... empty
    Frame: 39
        ... empty
    Frame: 40
        ... empty
    Frame: 41
        ... empty
    Frame: 42
        ... empty
    Frame: 43
        ... empty
    Frame: 44
        ... empty
    Frame: 45
        ... empty
    Frame: 46
        ... empty
    Frame: 47
        ... empty
    Frame: 48
        ... empty
    Frame: 49
        ... empty
    Frame: 50
        ... empty
    Frame: 51
        ... empty
    Frame: 52
        ... empty
    Frame: 53
        ... empty
    Frame: 54
        ... empty
    Frame: 55
        ... empty
    Frame: 56
        ... empty
    Frame: 57
        ... empty
    Frame: 58
        ... empty
    Frame: 59
        ... empty
    Frame: 60
        ... empty
    Frame: 61
        ... empty
    Frame: 62
        ... empty
    Frame: 63
        ... empty
    Frame: 64
        ... empty
    Frame: 65
        ... empty
    Frame: 66
        ... empty
    Frame: 67
        ... empty
    Frame: 68
        ... empty
    Frame: 69
        ... empty
    Frame: 70
        ... empty
    Frame: 71
        ... empty
    Frame: 72
        ... empty
    Frame: 73
        ... empty
    Frame: 74
        ... empty
    Frame: 75
        ... empty
    Frame: 76
        ... empty
    Frame: 77
        ... empty
    Frame: 78
        ... empty
    Frame: 79
        ... empty
    Frame: 80
        ... empty
Done
